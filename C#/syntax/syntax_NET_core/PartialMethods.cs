using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace syntax_NET_core
{
    internal static class PartialMethods
    {
        // PARTIAL METHODS
        // ***Code below generated by github copilot***
        //q: Give an example of partial method.
        //a: Partial methods allow you to define a method in one part of a partial class,
        //      and optionally implement it in another part of the class.
        //  If you do not implement the method in one part of the class,
        //      the compiler removes the method signature and all calls to the method in the class.
        //  If you do implement the method, the compiler includes the signature and all calls to the method.
        //  Partial methods are private by default, and it is a compile-time error to include any access
        //      modifiers, including private, on partial methods. -> This is true for older versions of C#.
        //      Now it is possible to use public modifier.
        public partial class MyPartialClassWithPartialMethods
        {
            // Definition in one part of the class.
            public partial void PartialMethod(int x);

            partial void AnotherPartialMethod(int x);
        }

        public partial class MyPartialClassWithPartialMethods
        {
            // Implementation in another part of the class.
            public partial void PartialMethod(int x)
            {
                Console.WriteLine(x);
            }

            // The method inside will not be called, because it is not implemented.
            // Compiler will remove it.
            public void SomeMethod()
            {
                AnotherPartialMethod(5);
            }
        }

        public static void Main__()
        {
            MyPartialClassWithPartialMethods myPartialClassWithPartialMethods
                = new MyPartialClassWithPartialMethods();
            myPartialClassWithPartialMethods.PartialMethod(100);
            myPartialClassWithPartialMethods.SomeMethod();
        }
    }
}
