class ByteStreamOperations:

    SEPARATOR = "-" * 200

    def __init__(self):
        pass

    @staticmethod
    def split_to_byte_array(bs: str, n: int = 2):
        """
        Split byte stream into list of bytes.
        Each byte will have 2 characters (by default).

        :param bs: Byte stream to split.
        :param n: Number of characters in each byte.

        Returns: List of bytes.

        """
        return [bs[i:i + n] for i in range(0, len(bs), n)]

    def split_to_space_separated_string(self, bs: str):
        """
        Split byte stream into list of bytes and join them into space separated
        string.

        :param bs: Byte stream to split.

        Returns: Space separated string of bytes.
        """
        return " ".join(self.split_to_byte_array(bs, 2))

    @staticmethod
    def compare_byte_streams(comment: str, bs1: list[str], bs2: list[str]):
        """
        Compare two byte streams. If there is a mismatch at a given index
        at both byte streams, print the index, the mismatched bytes and
        surrounding bytes around the mismatched bytes.

        :param comment: Comment to print before the comparison.
        :param bs1: First byte stream.
        :param bs2: Second byte stream.

        Returns: None

        """
        print(comment)
        for i, (byte_1, byte_2) in enumerate(zip(bs1, bs2)):
            if byte_1 != byte_2:
                print(f"Index (of payload): {i}, "
                      f"Byte mismatch: {byte_1} != {byte_2}, "
                      f"Surrounding bytes around NOK byte: {bs2[i - 3:i + 4]}")


byte_streams_OK = [
    "0009003c01000047ec8deb5cb3a05a318addc9586cda001100000000000a00010000f84000001000000000000000000000000000000000000000000000000000",
    "00000000fe0100004010000000000000fe0100008009003c01000047ec8deb5cb3a05a318addc9586cda001100000000000a00010000f840000001be000000000000000000000000000000000000000000000000003000cc0100000100000000000d0000000c4755000200010000000280010000c8000001000c4755000200010000000290010000c800000200004dac0001000100000120000300004dac0001000100000120000400004dac0001000100000120000500004dac0001000100000120000600004d600001000100000120000700004d600001000100000120000800004d600001000100000120000900004a7b0001000100100100000a01004d410001000100000110000b01004d410001000100000110000c000047900001000100000010003100c00100000100000000000d0000000c475500010001000000020001000c47550001000100000002000200004dac0001000100000120000300004dac0001000100000120000400004dac0001000100000120000500004dac0001000100000120000600004d600001000100000120000700004d600001000100000120000800004d600001000100000120000900004a7b0001000100100100000a01004d410001000100000110000b01004d410001000100000110000c00004790000100010000001000320026010000010000000000020000000c475500010001000000020001000c47550001000100000002",
    "7c000000400000007c00000000000000400000000009003c01000048ec8deb5cb3a05a318addc9586cda001100000000000a00010000aff00000003c000000000000000000000000000000000000000000000000",
    "000000007c0000007c000000000000007c0000008009003c01000048ec8deb5cb3a05a318addc9586cda001100000000000a00010000aff00000003c000000000000000000000000000000000000000000000000002000380100002a36444c31203133362d36424130302d3050483120202020202020202020202020202020200001560100020000000000030101000e",
    "40100000400000004010000000000000400000000009003c01000049ec8deb5cb3a05a318addc9586cda001100000000000a00010000f84000001000000000000000000000000000000000000000000000000000",
    "00000000fe0100004010000000000000fe0100008009003c01000049ec8deb5cb3a05a318addc9586cda001100000000000a00010000f840000001be000000000000000000000000000000000000000000000000003000cc0100000100000000000d0000000c4755000200010000000280010000c8000001000c4755000200010000000290010000c800000200004dac0001000100000120000300004dac0001000100000120000400004dac0001000100000120000500004dac0001000100000120000600004d600001000100000120000700004d600001000100000120000800004d600001000100000120000900004a7b0001000100100100000a01004d410001000100000110000b01004d410001000100000110000c000047900001000100000010003100c00100000100000000000d0000000c475500010001000000020001000c47550001000100000002000200004dac0001000100000120000300004dac0001000100000120000400004dac0001000100000120000500004dac0001000100000120000600004d600001000100000120000700004d600001000100000120000800004d600001000100000120000900004a7b0001000100100100000a01004d410001000100000110000b01004d410001000100000110000c00004790000100010000001000320026010000010000000000020000000c475500010001000000020001000c47550001000100000002",
]

byte_streams_NOK = [
    "0009003c01000042ec8deb5cb3a05a318addc9586cda001100000000000a00010000f84000001000000000000000000000000000000000000000000000000000",
    "00000000fe0100004010000000000000fe0100008009003c01000042ec8deb5cb3a05a318addc9586cda001100000000000a00010000f840000001be000000000000000000000000000000000000000000000000003000cc0100000100000000000d0000000d4755000200010000000280010000c8000001000d4755000200010000000290010000c800000200004dac0001000100000120000300004dac0001000100000120000400004dac0001000100000120000500004dac0001000100000120000600004d600001000100000120000700004d600001000100000120000800004d600001000100000120000900004a7b0001000100100100000a01004d410001000100000110000b01004d410001000100000110000c000047900001000100000010003100c00100000100000000000d0000000d475500010001000000020001000d47550001000100000002000200004dac0001000100000120000300004dac0001000100000120000400004dac0001000100000120000500004dac0001000100000120000600004d600001000100000120000700004d600001000100000120000800004d600001000100000120000900004a7b0001000100100100000a01004d410001000100000110000b01004d410001000100000110000c00004790000100010000001000320026010000010000000000020000000d475500010001000000020001000d47550001000100000002",
    "7c000000400000007c00000000000000400000000009003c01000043ec8deb5cb3a05a318addc9586cda001100000000000a00010000aff00000003c000000000000000000000000000000000000000000000000",
    "000000007c0000007c000000000000007c0000008009003c01000043ec8deb5cb3a05a318addc9586cda001100000000000a00010000aff00000003c000000000000000000000000000000000000000000000000002000380100002a36444c31203133362d36424130302d3050483120202020202020202020202020202020200001560100020000000000030101000e",
    "40100000400000004010000000000000400000000009003c01000044ec8deb5cb3a05a318addc9586cda001100000000000a00010000f84000001000000000000000000000000000000000000000000000000000",
    "00000000fe0100004010000000000000fe0100008009003c01000044ec8deb5cb3a05a318addc9586cda001100000000000a00010000f840000001be000000000000000000000000000000000000000000000000003000cc0100000100000000000d0000000d4755000200010000000280010000c8000001000d4755000200010000000290010000c800000200004dac0001000100000120000300004dac0001000100000120000400004dac0001000100000120000500004dac0001000100000120000600004d600001000100000120000700004d600001000100000120000800004d600001000100000120000900004a7b0001000100100100000a01004d410001000100000110000b01004d410001000100000110000c000047900001000100000010003100c00100000100000000000d0000000d475500010001000000020001000d47550001000100000002000200004dac0001000100000120000300004dac0001000100000120000400004dac0001000100000120000500004dac0001000100000120000600004d600001000100000120000700004d600001000100000120000800004d600001000100000120000900004a7b0001000100100100000a01004d410001000100000110000b01004d410001000100000110000c00004790000100010000001000320026010000010000000000020000000d475500010001000000020001000d47550001000100000002",

]

# for bs_OK, bs_NOK in zip(split_byte_streams_OK, split_byte_streams_NOK):
#     compare_byte_streams("", bs_OK, bs_NOK)
#     print(SEPARATOR)

bs_ops = ByteStreamOperations()
print(bs_ops.split_to_space_separated_string("9898001d010000015320432d524441304241433432303233080001fffe0f54134e"))
print(bs_ops.split_to_space_separated_string("9898001d010000015320432d524441304241433432303233090001fffd7daf114a"))

